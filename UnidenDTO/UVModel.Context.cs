//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnidenDTO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UVEntities : DbContext
    {
        public UVEntities()
            : base("name=UVEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<A_AssyOperatorProcessSetup> A_AssyOperatorProcessSetup { get; set; }
        public virtual DbSet<A_ATypePcb> A_ATypePcb { get; set; }
        public virtual DbSet<A_Eastech_Markit> A_Eastech_Markit { get; set; }
        public virtual DbSet<A_EastechCheckResult> A_EastechCheckResult { get; set; }
        public virtual DbSet<A_EastechEBChecker> A_EastechEBChecker { get; set; }
        public virtual DbSet<A_EastechFCTCheck> A_EastechFCTCheck { get; set; }
        public virtual DbSet<A_EastechFCTMarkit> A_EastechFCTMarkit { get; set; }
        public virtual DbSet<A_OperatorProcessData> A_OperatorProcessData { get; set; }
        public virtual DbSet<AssySamsungCauseCode> AssySamsungCauseCodes { get; set; }
        public virtual DbSet<AssySamsungDepartment> AssySamsungDepartments { get; set; }
        public virtual DbSet<AssySamsungErrorCode> AssySamsungErrorCodes { get; set; }
        public virtual DbSet<AssySamsungRepair> AssySamsungRepairs { get; set; }
        public virtual DbSet<AssySamsungRepairCode> AssySamsungRepairCodes { get; set; }
        public virtual DbSet<Box_ETManager> Box_ETManager { get; set; }
        public virtual DbSet<Box_IssueManage> Box_IssueManage { get; set; }
        public virtual DbSet<Box_ReturnManage> Box_ReturnManage { get; set; }
        public virtual DbSet<EASTECH_PROGRAMHISTORY> EASTECH_PROGRAMHISTORY { get; set; }
        public virtual DbSet<ModelName> ModelNames { get; set; }
        public virtual DbSet<SMT_LINE> SMT_LINE { get; set; }
        public virtual DbSet<Smt_Repair_Bom> Smt_Repair_Bom { get; set; }
        public virtual DbSet<Smt_Repair_Cause> Smt_Repair_Cause { get; set; }
        public virtual DbSet<Smt_Repair_Error_Code> Smt_Repair_Error_Code { get; set; }
        public virtual DbSet<Smt_Repair_Result> Smt_Repair_Result { get; set; }
        public virtual DbSet<Smt_Repaire_DeptCause> Smt_Repaire_DeptCause { get; set; }
        public virtual DbSet<tbl_EastechPCBCode> tbl_EastechPCBCode { get; set; }
        public virtual DbSet<tbl_EstechSerialGeneral> tbl_EstechSerialGeneral { get; set; }
        public virtual DbSet<tbl_EstechSerialGeneral_Tmp> tbl_EstechSerialGeneral_Tmp { get; set; }
        public virtual DbSet<tbl_Sys_Division> tbl_Sys_Division { get; set; }
        public virtual DbSet<tbl_Sys_Section> tbl_Sys_Section { get; set; }
        public virtual DbSet<TBLUSER> TBLUSERs { get; set; }
        public virtual DbSet<UvDepartment> UvDepartments { get; set; }
        public virtual DbSet<SYS_ButtonFunction> SYS_ButtonFunction { get; set; }
        public virtual DbSet<SYS_MenuFunction> SYS_MenuFunction { get; set; }
        public virtual DbSet<SYS_UserButtonFunction> SYS_UserButtonFunction { get; set; }
        public virtual DbSet<SYS_UserMenuFuction> SYS_UserMenuFuction { get; set; }
        public virtual DbSet<SYS_Users> SYS_Users { get; set; }
        public virtual DbSet<UV_DEPT> UV_DEPT { get; set; }
        public virtual DbSet<UV_DIV> UV_DIV { get; set; }
        public virtual DbSet<UV_PRO_LINE> UV_PRO_LINE { get; set; }
        public virtual DbSet<UV_STAGING_LOCATION> UV_STAGING_LOCATION { get; set; }
        public virtual DbSet<WHS_LOCATION> WHS_LOCATION { get; set; }
        public virtual DbSet<WHS_RECEIVING_INPUT> WHS_RECEIVING_INPUT { get; set; }
        public virtual DbSet<WHS_TRANSFER_LOTTAG> WHS_TRANSFER_LOTTAG { get; set; }
        public virtual DbSet<tbl_SessionLogin> tbl_SessionLogin { get; set; }
        public virtual DbSet<WHS_INPUT_IQC_RETURN> WHS_INPUT_IQC_RETURN { get; set; }
        public virtual DbSet<WHS_IQC_INPUT_RETURN_RESULT> WHS_IQC_INPUT_RETURN_RESULT { get; set; }
        public virtual DbSet<WHS_MONITOR_FEDEX_DHL_OTHER> WHS_MONITOR_FEDEX_DHL_OTHER { get; set; }
        public virtual DbSet<WHS_PO_ERROR_KEYIN> WHS_PO_ERROR_KEYIN { get; set; }
        public virtual DbSet<UV_STAGING_PCBLIST> UV_STAGING_PCBLIST { get; set; }
        public virtual DbSet<UV_STAGING_INPUT> UV_STAGING_INPUT { get; set; }
        public virtual DbSet<UV_STAGING_OUTPUT> UV_STAGING_OUTPUT { get; set; }
        public virtual DbSet<UV_SETUP_PROCESS> UV_SETUP_PROCESS { get; set; }
        public virtual DbSet<OUTSOURCE_UVLotVsETOrder> OUTSOURCE_UVLotVsETOrder { get; set; }
        public virtual DbSet<OUTSOURCE_UVPartsVsETParts> OUTSOURCE_UVPartsVsETParts { get; set; }
        public virtual DbSet<SMT_OUTSOURCE_ORDER_IMPORT> SMT_OUTSOURCE_ORDER_IMPORT { get; set; }
        public virtual DbSet<OUTSOURCE_ET_BOM> OUTSOURCE_ET_BOM { get; set; }
        public virtual DbSet<OUTSOURCE_UV_BOM> OUTSOURCE_UV_BOM { get; set; }
        public virtual DbSet<EASTECH_SMT_OUTPUT> EASTECH_SMT_OUTPUT { get; set; }
        public virtual DbSet<PROGRAM> PROGRAMs { get; set; }
        public virtual DbSet<PROGRAMHISTORY> PROGRAMHISTORies { get; set; }
        public virtual DbSet<JIG_SECTION> JIG_SECTION { get; set; }
        public virtual DbSet<JIG_LOCATION> JIG_LOCATION { get; set; }
        public virtual DbSet<JIG_CALTYPE> JIG_CALTYPE { get; set; }
        public virtual DbSet<SMT_OUTSOURCE_OUTPUT> SMT_OUTSOURCE_OUTPUT { get; set; }
        public virtual DbSet<IT_DevicesTransaction> IT_DevicesTransaction { get; set; }
        public virtual DbSet<IT_DevicesType> IT_DevicesType { get; set; }
        public virtual DbSet<SMT_OUTSOURCE_IN_QTY> SMT_OUTSOURCE_IN_QTY { get; set; }
        public virtual DbSet<IT_BuyDeviceMonitor> IT_BuyDeviceMonitor { get; set; }
        public virtual DbSet<EASTECH_ERROR_APPROVE> EASTECH_ERROR_APPROVE { get; set; }
        public virtual DbSet<IT_DevicesManagement> IT_DevicesManagement { get; set; }
        public virtual DbSet<SMT_OUTPUT_MIS_MATERIAL> SMT_OUTPUT_MIS_MATERIAL { get; set; }
        public virtual DbSet<JIG_CALDEVICES> JIG_CALDEVICES { get; set; }
        public virtual DbSet<EASTECH_ERROR_LOG_APPROVE> EASTECH_ERROR_LOG_APPROVE { get; set; }
        public virtual DbSet<SMT_OUTSOURCE_OUTHISTORY> SMT_OUTSOURCE_OUTHISTORY { get; set; }
        public virtual DbSet<UV_FACTORY> UV_FACTORY { get; set; }
        public virtual DbSet<JIG_CALDEVICES_NEW> JIG_CALDEVICES_NEW { get; set; }
        public virtual DbSet<JIG_CALHISTORY> JIG_CALHISTORY { get; set; }
        public virtual DbSet<JIGH_LOCATION> JIGH_LOCATION { get; set; }
        public virtual DbSet<JIG_INOUT> JIG_INOUT { get; set; }
        public virtual DbSet<JIGH_INOUT> JIGH_INOUT { get; set; }
        public virtual DbSet<JIG_REPAIRHISTORY> JIG_REPAIRHISTORY { get; set; }
        public virtual DbSet<PcbType> PcbTypes { get; set; }
        public virtual DbSet<UV_MODELLOTINFO> UV_MODELLOTINFO { get; set; }
        public virtual DbSet<UV_QRCODELINKVSLINECODE> UV_QRCODELINKVSLINECODE { get; set; }
        public virtual DbSet<UV_QRCODEMANAGEMENT> UV_QRCODEMANAGEMENT { get; set; }
        public virtual DbSet<UV_LINEPROCESS> UV_LINEPROCESS { get; set; }
        public virtual DbSet<UV_LINEPROCESS_HISTORY> UV_LINEPROCESS_HISTORY { get; set; }
        public virtual DbSet<JIGH_CALDEVICES> JIGH_CALDEVICES { get; set; }
        public virtual DbSet<UV_DELETEBARCODE> UV_DELETEBARCODE { get; set; }
        public virtual DbSet<UV_LINEERRORRECORD> UV_LINEERRORRECORD { get; set; }
        public virtual DbSet<UV_LINECAUSECODE> UV_LINECAUSECODE { get; set; }
        public virtual DbSet<UV_LINECAUSEDEPT> UV_LINECAUSEDEPT { get; set; }
        public virtual DbSet<UV_LINEERRORCODE> UV_LINEERRORCODE { get; set; }
        public virtual DbSet<UV_LINEREPAIRHISTORY> UV_LINEREPAIRHISTORY { get; set; }
        public virtual DbSet<UV_SMT_STD_OP_HISTORY> UV_SMT_STD_OP_HISTORY { get; set; }
        public virtual DbSet<UV_GROUP_PROCESS> UV_GROUP_PROCESS { get; set; }
        public virtual DbSet<JIGH_REPAIRHISTORY> JIGH_REPAIRHISTORY { get; set; }
        public virtual DbSet<SMT_AOI_ERROR_RECORD> SMT_AOI_ERROR_RECORD { get; set; }
        public virtual DbSet<UVASSY_BCARDDATA> UVASSY_BCARDDATA { get; set; }
        public virtual DbSet<UVASSY_IMPORTQRCODE> UVASSY_IMPORTQRCODE { get; set; }
        public virtual DbSet<UVASSY_QRCODELABEL> UVASSY_QRCODELABEL { get; set; }
        public virtual DbSet<UVASSY_MODEL> UVASSY_MODEL { get; set; }
        public virtual DbSet<UVASSY_LOTCONTROL> UVASSY_LOTCONTROL { get; set; }
        public virtual DbSet<UVASSY_EASTECHPCBCODE> UVASSY_EASTECHPCBCODE { get; set; }
        public virtual DbSet<UVASSY_EASTECHSERIALGENERAL> UVASSY_EASTECHSERIALGENERAL { get; set; }
        public virtual DbSet<UVASSY_EASTECHQRWIRELESS> UVASSY_EASTECHQRWIRELESS { get; set; }
        public virtual DbSet<UVASSY_CAUSECODE> UVASSY_CAUSECODE { get; set; }
        public virtual DbSet<UVASSY_DEFECTCODE> UVASSY_DEFECTCODE { get; set; }
        public virtual DbSet<UVASSY_DEPTCODE> UVASSY_DEPTCODE { get; set; }
        public virtual DbSet<UVASSY_ERRORCODE> UVASSY_ERRORCODE { get; set; }
        public virtual DbSet<UVASSY_REASONCODE> UVASSY_REASONCODE { get; set; }
        public virtual DbSet<UVASSY_REPAIRGENERALCODE> UVASSY_REPAIRGENERALCODE { get; set; }
        public virtual DbSet<UVASSY_REPAIRMODEL> UVASSY_REPAIRMODEL { get; set; }
        public virtual DbSet<UVASSY_COM1> UVASSY_COM1 { get; set; }
        public virtual DbSet<UVASSY_CBSETTING> UVASSY_CBSETTING { get; set; }
        public virtual DbSet<UVASSY_CBSAVEDATA> UVASSY_CBSAVEDATA { get; set; }
        public virtual DbSet<UVASSY_COM21> UVASSY_COM21 { get; set; }
        public virtual DbSet<UVASSY_COM2> UVASSY_COM2 { get; set; }
        public virtual DbSet<UVASSY_EASTECHHISTORY> UVASSY_EASTECHHISTORY { get; set; }
        public virtual DbSet<UVASSY_REPAIRHISTORY> UVASSY_REPAIRHISTORY { get; set; }
        public virtual DbSet<UVASSY_PCBTYPE> UVASSY_PCBTYPE { get; set; }
        public virtual DbSet<UVASSY_REPAIREKEYIN> UVASSY_REPAIREKEYIN { get; set; }
        public virtual DbSet<UVASSY_CAUSECODEREPAIR> UVASSY_CAUSECODEREPAIR { get; set; }
    
        public virtual ObjectResult<Staging_PcbList_GetAllByLot_Result> Staging_PcbList_GetAllByLot(string lot)
        {
            var lotParameter = lot != null ?
                new ObjectParameter("Lot", lot) :
                new ObjectParameter("Lot", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Staging_PcbList_GetAllByLot_Result>("Staging_PcbList_GetAllByLot", lotParameter);
        }
    
        public virtual ObjectResult<sp_EastechOutputHistory_SelectCheckByProkey_Result> sp_EastechOutputHistory_SelectCheckByProkey(string programpartlist, string remark1)
        {
            var programpartlistParameter = programpartlist != null ?
                new ObjectParameter("programpartlist", programpartlist) :
                new ObjectParameter("programpartlist", typeof(string));
    
            var remark1Parameter = remark1 != null ?
                new ObjectParameter("Remark1", remark1) :
                new ObjectParameter("Remark1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EastechOutputHistory_SelectCheckByProkey_Result>("sp_EastechOutputHistory_SelectCheckByProkey", programpartlistParameter, remark1Parameter);
        }
    
        public virtual int sp_EastechOutputHistory_UpdatetSelectData(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EastechOutputHistory_UpdatetSelectData", idParameter);
        }
    
        public virtual int sp_EastechOutputHistory_InsertSelectData(string qrCode, string programkey, string feeder, string lineName, string partcode, string nDesc, string dateCode, Nullable<int> usage, string model, string remark, string remark1, string remark2, string remark3, string remark4, string remark5)
        {
            var qrCodeParameter = qrCode != null ?
                new ObjectParameter("QrCode", qrCode) :
                new ObjectParameter("QrCode", typeof(string));
    
            var programkeyParameter = programkey != null ?
                new ObjectParameter("programkey", programkey) :
                new ObjectParameter("programkey", typeof(string));
    
            var feederParameter = feeder != null ?
                new ObjectParameter("Feeder", feeder) :
                new ObjectParameter("Feeder", typeof(string));
    
            var lineNameParameter = lineName != null ?
                new ObjectParameter("LineName", lineName) :
                new ObjectParameter("LineName", typeof(string));
    
            var partcodeParameter = partcode != null ?
                new ObjectParameter("Partcode", partcode) :
                new ObjectParameter("Partcode", typeof(string));
    
            var nDescParameter = nDesc != null ?
                new ObjectParameter("NDesc", nDesc) :
                new ObjectParameter("NDesc", typeof(string));
    
            var dateCodeParameter = dateCode != null ?
                new ObjectParameter("DateCode", dateCode) :
                new ObjectParameter("DateCode", typeof(string));
    
            var usageParameter = usage.HasValue ?
                new ObjectParameter("usage", usage) :
                new ObjectParameter("usage", typeof(int));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var remark1Parameter = remark1 != null ?
                new ObjectParameter("Remark1", remark1) :
                new ObjectParameter("Remark1", typeof(string));
    
            var remark2Parameter = remark2 != null ?
                new ObjectParameter("Remark2", remark2) :
                new ObjectParameter("Remark2", typeof(string));
    
            var remark3Parameter = remark3 != null ?
                new ObjectParameter("Remark3", remark3) :
                new ObjectParameter("Remark3", typeof(string));
    
            var remark4Parameter = remark4 != null ?
                new ObjectParameter("Remark4", remark4) :
                new ObjectParameter("Remark4", typeof(string));
    
            var remark5Parameter = remark5 != null ?
                new ObjectParameter("Remark5", remark5) :
                new ObjectParameter("Remark5", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EastechOutputHistory_InsertSelectData", qrCodeParameter, programkeyParameter, feederParameter, lineNameParameter, partcodeParameter, nDescParameter, dateCodeParameter, usageParameter, modelParameter, remarkParameter, remark1Parameter, remark2Parameter, remark3Parameter, remark4Parameter, remark5Parameter);
        }
    
        public virtual ObjectResult<string> sp_SmtOuput_CountByChecker(string programkey1, string programkey2, string remark)
        {
            var programkey1Parameter = programkey1 != null ?
                new ObjectParameter("programkey1", programkey1) :
                new ObjectParameter("programkey1", typeof(string));
    
            var programkey2Parameter = programkey2 != null ?
                new ObjectParameter("programkey2", programkey2) :
                new ObjectParameter("programkey2", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_SmtOuput_CountByChecker", programkey1Parameter, programkey2Parameter, remarkParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_SmtOuput_CountQrCodeByUser(string programkey1, string programkey2, string qRCode, string remark, Nullable<System.DateTime> dateT)
        {
            var programkey1Parameter = programkey1 != null ?
                new ObjectParameter("programkey1", programkey1) :
                new ObjectParameter("programkey1", typeof(string));
    
            var programkey2Parameter = programkey2 != null ?
                new ObjectParameter("programkey2", programkey2) :
                new ObjectParameter("programkey2", typeof(string));
    
            var qRCodeParameter = qRCode != null ?
                new ObjectParameter("QRCode", qRCode) :
                new ObjectParameter("QRCode", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var dateTParameter = dateT.HasValue ?
                new ObjectParameter("DateT", dateT) :
                new ObjectParameter("DateT", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_SmtOuput_CountQrCodeByUser", programkey1Parameter, programkey2Parameter, qRCodeParameter, remarkParameter, dateTParameter);
        }
    
        public virtual ObjectResult<sp_Smt_CheckMistakeMaterial_Result> sp_Smt_CheckMistakeMaterial(string programpartlist, string remark1)
        {
            var programpartlistParameter = programpartlist != null ?
                new ObjectParameter("programpartlist", programpartlist) :
                new ObjectParameter("programpartlist", typeof(string));
    
            var remark1Parameter = remark1 != null ?
                new ObjectParameter("remark1", remark1) :
                new ObjectParameter("remark1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Smt_CheckMistakeMaterial_Result>("sp_Smt_CheckMistakeMaterial", programpartlistParameter, remark1Parameter);
        }
    
        public virtual ObjectResult<sp_SmtIPQCChecker_Result> sp_SmtIPQCChecker(string programpartlist, string remark1)
        {
            var programpartlistParameter = programpartlist != null ?
                new ObjectParameter("programpartlist", programpartlist) :
                new ObjectParameter("programpartlist", typeof(string));
    
            var remark1Parameter = remark1 != null ?
                new ObjectParameter("remark1", remark1) :
                new ObjectParameter("remark1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SmtIPQCChecker_Result>("sp_SmtIPQCChecker", programpartlistParameter, remark1Parameter);
        }
    
        public virtual ObjectResult<sp_SmtHistory_ByProgram_Result> sp_SmtHistory_ByProgram(string programpartlist)
        {
            var programpartlistParameter = programpartlist != null ?
                new ObjectParameter("programpartlist", programpartlist) :
                new ObjectParameter("programpartlist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SmtHistory_ByProgram_Result>("sp_SmtHistory_ByProgram", programpartlistParameter);
        }
    
        public virtual ObjectResult<sp_Smt_CombineProgramNonQRCode_Result> sp_Smt_CombineProgramNonQRCode(string new_programpartlist, string old_programpartlist, string old_Line)
        {
            var new_programpartlistParameter = new_programpartlist != null ?
                new ObjectParameter("New_programpartlist", new_programpartlist) :
                new ObjectParameter("New_programpartlist", typeof(string));
    
            var old_programpartlistParameter = old_programpartlist != null ?
                new ObjectParameter("Old_programpartlist", old_programpartlist) :
                new ObjectParameter("Old_programpartlist", typeof(string));
    
            var old_LineParameter = old_Line != null ?
                new ObjectParameter("Old_Line", old_Line) :
                new ObjectParameter("Old_Line", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Smt_CombineProgramNonQRCode_Result>("sp_Smt_CombineProgramNonQRCode", new_programpartlistParameter, old_programpartlistParameter, old_LineParameter);
        }
    
        public virtual ObjectResult<sp_Smt_CombineProgramQRCode_Result> sp_Smt_CombineProgramQRCode(string new_programpartlist, string old_programpartlist, string old_Line)
        {
            var new_programpartlistParameter = new_programpartlist != null ?
                new ObjectParameter("New_programpartlist", new_programpartlist) :
                new ObjectParameter("New_programpartlist", typeof(string));
    
            var old_programpartlistParameter = old_programpartlist != null ?
                new ObjectParameter("Old_programpartlist", old_programpartlist) :
                new ObjectParameter("Old_programpartlist", typeof(string));
    
            var old_LineParameter = old_Line != null ?
                new ObjectParameter("Old_Line", old_Line) :
                new ObjectParameter("Old_Line", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Smt_CombineProgramQRCode_Result>("sp_Smt_CombineProgramQRCode", new_programpartlistParameter, old_programpartlistParameter, old_LineParameter);
        }
    
        public virtual int sp_Stating_ViewInventory(string location, string lot, string model, string peno, string pcbname, string createdate)
        {
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var lotParameter = lot != null ?
                new ObjectParameter("Lot", lot) :
                new ObjectParameter("Lot", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var penoParameter = peno != null ?
                new ObjectParameter("Peno", peno) :
                new ObjectParameter("Peno", typeof(string));
    
            var pcbnameParameter = pcbname != null ?
                new ObjectParameter("Pcbname", pcbname) :
                new ObjectParameter("Pcbname", typeof(string));
    
            var createdateParameter = createdate != null ?
                new ObjectParameter("Createdate", createdate) :
                new ObjectParameter("Createdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Stating_ViewInventory", locationParameter, lotParameter, modelParameter, penoParameter, pcbnameParameter, createdateParameter);
        }
    
        public virtual int OutSource_Delete_ETBOM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutSource_Delete_ETBOM");
        }
    
        public virtual int OutSource_Delete_UVBOM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutSource_Delete_UVBOM");
        }
    
        public virtual int sp_STAGING_RemoveDuplicateRow()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_STAGING_RemoveDuplicateRow");
        }
    
        public virtual int OutSource_Delete_UVETLot()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutSource_Delete_UVETLot");
        }
    
        public virtual int OutSource_Delete_UVETParts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutSource_Delete_UVETParts");
        }
    
        public virtual ObjectResult<OutSource_UVBOM_ETBOM_Result3> OutSource_UVBOM_ETBOM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OutSource_UVBOM_ETBOM_Result3>("OutSource_UVBOM_ETBOM");
        }
    
        public virtual ObjectResult<Smt_OutSource_Mrp_Result> Smt_OutSource_Mrp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Smt_OutSource_Mrp_Result>("Smt_OutSource_Mrp");
        }
    
        public virtual ObjectResult<sp_smt_output_searchBydate_Result> sp_smt_output_searchBydate(string qRCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var qRCodeParameter = qRCode != null ?
                new ObjectParameter("QRCode", qRCode) :
                new ObjectParameter("QRCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_smt_output_searchBydate_Result>("sp_smt_output_searchBydate", qRCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<OutSource_ExportUVLotToDownload_Result2> OutSource_ExportUVLotToDownload()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OutSource_ExportUVLotToDownload_Result2>("OutSource_ExportUVLotToDownload");
        }
    }
}
